{"version":3,"sources":["components/SuccessLogged.tsx","components/LoginForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SuccessLogged","props","console","log","className","data","name","email","type","onClick","onExit","LoginForm","useState","isLogged","setIsLogged","emailState","setEmailState","passwordState","setPasswordState","responseToken","setResponseToken","userInfo","setUserInfo","getUserInfo","accessToken","a","auth","fetch","method","headers","then","response","json","result","handleSubmit","user","mode","body","JSON","stringify","ok","infoFetch","catch","err","changeEmail","event","target","value","changePassword","initialValues","password","onSubmit","errors","touched","htmlFor","onChange","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a17d0c14.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\ninterface IData {\r\n    email: string,\r\n    name: string\r\n}\r\n\r\n\r\ninterface SuccessLoggedProps {\r\n    data: IData,\r\n    onExit (): void\r\n}\r\n\r\n\r\nconst SuccessLogged: React.FC<SuccessLoggedProps> = (props) => {\r\n\r\n    console.log('Enter SuccessLogged')\r\n    console.log(props)\r\n\r\n    return (\r\n        <div className={\"successLogged\"}>\r\n            <div>\r\n                <h5>{`Hello ${props.data.name}`}</h5>\r\n            </div>\r\n            <div>\r\n                <h5>{`Your email ${props.data.email}`}</h5>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"waves-effect waves-red btn-large\" onClick={props.onExit}>Exit</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessLogged;","import {Field, Form, Formik} from \"formik\";\r\nimport React, { useState} from \"react\";\r\nimport './style.css';\r\nimport SuccessLogged from \"./SuccessLogged\";\r\n\r\n\r\n\r\nconst LoginForm: React.FC = () => {\r\n    const [isLogged, setIsLogged] = useState<boolean>(false);\r\n    const [emailState, setEmailState] = useState<string>('');\r\n    const [passwordState, setPasswordState] = useState<string>('');\r\n    const [responseToken, setResponseToken] = useState<any>('');\r\n    const [userInfo, setUserInfo] = useState<any>('');\r\n\r\n    const getUserInfo = async (accessToken: string) => {\r\n        const auth = `Bearer ${accessToken}`;\r\n\r\n        let result = await fetch('https://tager.dev.ozitag.com//api/tager/user/profile', {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": auth\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        setUserInfo(result);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n        let user = {\r\n            \"clientId\": 1,\r\n            \"email\": emailState,\r\n            \"password\": passwordState\r\n        }\r\n\r\n        fetch('https://tager.dev.ozitag.com/api/auth/user', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(infoFetch => {\r\n                setResponseToken(infoFetch.data.accessToken);\r\n                getUserInfo(infoFetch.data.accessToken)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        setEmailState('');\r\n        setPasswordState('');\r\n        setIsLogged(true);\r\n    }\r\n\r\n    const changeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmailState(event.target.value);\r\n    }\r\n    const changePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordState(event.target.value);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        const auth = `Bearer ${responseToken}`;\r\n\r\n        fetch('https://tager.dev.ozitag.com/api/tager/user/profile/logout', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": auth\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    setIsLogged(false);\r\n                    setEmailState('');\r\n                    setUserInfo('');\r\n                    setResponseToken('');\r\n                }\r\n            })\r\n    }\r\n\r\n    const form = () =>\r\n        <Formik\r\n            initialValues={{email: emailState, password: passwordState}}\r\n            onSubmit={handleSubmit}\r\n        >\r\n\r\n            {({errors, touched}) => (\r\n                <Form>\r\n\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field onChange={changeEmail} name=\"email\" type=\"email\" value={emailState} placeholder=\"email\"/>\r\n                    {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n\r\n                    <label htmlFor=\"email\">Password</label>\r\n                    <Field type={'password'} onChange={changePassword} value={passwordState} name=\"password\" placeholder=\"password\"/>\r\n\r\n                    <button type=\"submit\" className=\"waves-effect waves-light btn-large\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login form</h3>\r\n            {isLogged && userInfo ? <SuccessLogged {...userInfo} onExit={handleExit}/> : form()}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\nimport LoginForm from \"./components/LoginForm\";\n\n\nconst App: React.FunctionComponent = () => {\n    return (\n        <>\n            <div className=\"container\">\n                <LoginForm />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}